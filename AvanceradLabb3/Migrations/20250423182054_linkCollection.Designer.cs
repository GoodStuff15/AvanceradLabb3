// <auto-generated />
using AvanceradLabb3.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AvanceradLabb3.Migrations
{
    [DbContext(typeof(InterestContext))]
    [Migration("20250423182054_linkCollection")]
    partial class linkCollection
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AvanceradLabb3.Models.Hyperlink", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("InCollectionId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("InCollectionId");

                    b.ToTable("Hyperlink");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Title = "Scryfall",
                            Url = "http://www.scryfall.com"
                        },
                        new
                        {
                            Id = 2,
                            Title = "Biltema",
                            Url = "http://www.biltema.com"
                        });
                });

            modelBuilder.Entity("AvanceradLabb3.Models.Interest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Interests");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "A collectible card game, and its rewarding and strategic gameplay, compelling characters, and fantastic Multiverse have entertained and delighted fans for more than 30 years. With more than 50 million fans to date, MAGIC is a worldwide phenomenon published in more than 150 countries.",
                            Title = "Magic The Gathering"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Skruva och ha sig lite",
                            Title = "Mecka"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Slåss pang bom krasch!!",
                            Title = "Slåss"
                        });
                });

            modelBuilder.Entity("AvanceradLabb3.Models.LinkCollection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("InterestId")
                        .HasColumnType("int");

                    b.Property<int?>("PersonId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("InterestId");

                    b.HasIndex("PersonId");

                    b.ToTable("LinkCollection");

                    b.HasData(
                        new
                        {
                            Id = 1
                        },
                        new
                        {
                            Id = 2
                        },
                        new
                        {
                            Id = 3
                        },
                        new
                        {
                            Id = 4
                        });
                });

            modelBuilder.Entity("AvanceradLabb3.Models.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("People");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Age = 42,
                            Email = "vd@swedbonk.se",
                            FirstName = "Gustav",
                            LastName = "Eriksson"
                        },
                        new
                        {
                            Id = 2,
                            Age = 72,
                            Email = "mackans@bygghemma.se",
                            FirstName = "McGyver",
                            LastName = "Jonsson"
                        },
                        new
                        {
                            Id = 3,
                            Age = 63,
                            Email = "jean-claude.vandamme@swipnet.se",
                            FirstName = "Jean Claude",
                            LastName = "Van Damme"
                        });
                });

            modelBuilder.Entity("PersonInterest", b =>
                {
                    b.Property<int>("InterestsId")
                        .HasColumnType("int");

                    b.Property<int>("PeopleId")
                        .HasColumnType("int");

                    b.HasKey("InterestsId", "PeopleId");

                    b.HasIndex("PeopleId");

                    b.ToTable("PersonInterest");

                    b.HasData(
                        new
                        {
                            InterestsId = 1,
                            PeopleId = 1
                        },
                        new
                        {
                            InterestsId = 2,
                            PeopleId = 2
                        },
                        new
                        {
                            InterestsId = 3,
                            PeopleId = 2
                        },
                        new
                        {
                            InterestsId = 3,
                            PeopleId = 3
                        });
                });

            modelBuilder.Entity("AvanceradLabb3.Models.Hyperlink", b =>
                {
                    b.HasOne("AvanceradLabb3.Models.LinkCollection", "InCollection")
                        .WithMany("Links")
                        .HasForeignKey("InCollectionId");

                    b.Navigation("InCollection");
                });

            modelBuilder.Entity("AvanceradLabb3.Models.LinkCollection", b =>
                {
                    b.HasOne("AvanceradLabb3.Models.Interest", null)
                        .WithMany("LinkCollections")
                        .HasForeignKey("InterestId");

                    b.HasOne("AvanceradLabb3.Models.Person", null)
                        .WithMany("LinkCollections")
                        .HasForeignKey("PersonId");
                });

            modelBuilder.Entity("PersonInterest", b =>
                {
                    b.HasOne("AvanceradLabb3.Models.Interest", null)
                        .WithMany()
                        .HasForeignKey("InterestsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AvanceradLabb3.Models.Person", null)
                        .WithMany()
                        .HasForeignKey("PeopleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AvanceradLabb3.Models.Interest", b =>
                {
                    b.Navigation("LinkCollections");
                });

            modelBuilder.Entity("AvanceradLabb3.Models.LinkCollection", b =>
                {
                    b.Navigation("Links");
                });

            modelBuilder.Entity("AvanceradLabb3.Models.Person", b =>
                {
                    b.Navigation("LinkCollections");
                });
#pragma warning restore 612, 618
        }
    }
}
